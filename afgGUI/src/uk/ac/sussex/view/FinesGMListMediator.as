package uk.ac.sussex.view {	import uk.ac.sussex.serverhandlers.BankHandlers;	import uk.ac.sussex.view.components.FinesDisplay;	import uk.ac.sussex.model.FinesProxy;	import flash.events.Event;	import uk.ac.sussex.view.components.ScrollingList;	import org.puremvc.as3.multicore.interfaces.INotification;	import uk.ac.sussex.general.ApplicationFacade;	import org.puremvc.as3.multicore.patterns.mediator.Mediator;	import org.puremvc.as3.multicore.interfaces.IMediator;	/**	 * @author em97	 */	public class FinesGMListMediator extends Mediator implements IMediator {		private var finesListProxy:FinesProxy;		public static const NAME:String = "FinesGMListMediator";				public function FinesGMListMediator() {			super(NAME, null);		}		override public function listNotificationInterests():Array {			return [FinesProxy.FINES_ADDED];		}		override public function handleNotification (note:INotification):void {			switch (note.getName()){				case FinesProxy.FINES_ADDED:					var finesList:Array = finesListProxy.getFines();					finesDisplay.displayFines(finesList);					break;			}		}		public function showList(showList:Boolean):void{			finesDisplay.clearSelection();			if(showList){				sendNotification(ViewAreaMediator.ADD_VIEW_COMPONENT, finesDisplay);			} else {				sendNotification(ApplicationFacade.REMOVE_FROM_SCREEN, finesDisplay);			}		}		public function getSelectedBillId():String{			return finesDisplay.getSelectedFineId();		}		public function listenForSelection(listen:Boolean):void{			if(listen){				finesDisplay.addEventListener(ScrollingList.ITEM_SELECTED, itemSelected);			} else {				finesDisplay.removeEventListener(ScrollingList.ITEM_SELECTED, itemSelected);			}		}		private function itemSelected(e:Event):void {			trace("FinesListMediator sez: I heard a bill item has been selected. ");			sendNotification(ApplicationFacade.SWITCH_SUBMENU_ITEM, BankHandlers.FINES_SUB_MENU_PAY);			listenForSelection(false);		}		protected function get finesDisplay():FinesDisplay {			return viewComponent as FinesDisplay;		}		override public function onRegister():void {			viewComponent = new FinesDisplay();			finesDisplay.x = 100;			finesDisplay.y = 10;			finesListProxy = facade.retrieveProxy(FinesProxy.NAME) as FinesProxy;			sendNotification(ViewAreaMediator.ADD_VIEW_COMPONENT, finesDisplay);		}		override public function onRemove():void {			sendNotification(ApplicationFacade.REMOVE_FROM_SCREEN, finesDisplay);		}	}}