package uk.ac.sussex.view.components {		import flash.display.Shape;	import flash.text.*;	import flash.display.MovieClip;			public class GenericFieldLabel extends MovieClip {		private var labelText:TextField;		private var labelBg:Shape; 		private var enabledTFormat:TextFormat;		private var disabledTFormat:TextFormat;				private static const DEFAULT_HEIGHT:Number = 23;		private static const ENABLED_COLOUR:uint = 0x09063A;		private static const DISABLED_COLOUR:uint = 0x09063A;				public function GenericFieldLabel() {			// constructor code			enabledTFormat = new TextFormat();			enabledTFormat.font = "Arial";			enabledTFormat.size = 13;			enabledTFormat.bold = true;			enabledTFormat.align = TextFormatAlign.CENTER;						disabledTFormat = new TextFormat();			disabledTFormat.font = "Arial";			disabledTFormat.size = 13;			disabledTFormat.bold = false;			disabledTFormat.align = TextFormatAlign.CENTER;							labelText = new TextField();			labelText.defaultTextFormat = enabledTFormat;				labelText.textColor = 0xF4EFA5;			labelText.background = false;			labelText.border = false;			labelText.selectable = false;			labelText.text = labelText.text.toUpperCase();			labelText.height = DEFAULT_HEIGHT;			labelText.y = 3;						labelBg = new Shape();			drawBackground();			addChild(labelBg);			addChild(labelText);					}		public function setText(newText:String ):void {			if(newText != null){				this.labelText.text = newText.toUpperCase();			} else {				this.labelText.text = "";			}		}		override public function set width(newWidth:Number):void{			labelText.width = newWidth;			labelBg.graphics.clear();			drawBackground();		}		override public function set enabled(enabled:Boolean):void {			super.enabled = enabled;			if(enabled){				this.showEnabled();			} else {				this.showDisabled();			}		}		private function drawBackground():void {			var colour:uint;			var alpha:Number;			if(super.enabled){				colour = ENABLED_COLOUR;				alpha = 1;			} else {				colour = DISABLED_COLOUR;				alpha = 0.5;			}			labelBg.graphics.lineStyle(1,ENABLED_COLOUR, alpha);			labelBg.graphics.beginFill(colour, alpha); 			labelBg.graphics.drawRect(0,0, labelText.width,labelText.height+labelText.y);			labelBg.graphics.endFill();					}		private function showEnabled():void {			labelText.defaultTextFormat = enabledTFormat;			this.setText(labelText.text);				drawBackground();		}		private function showDisabled():void {			labelText.defaultTextFormat = disabledTFormat;			this.setText(labelText.text);			drawBackground();		}	}	}