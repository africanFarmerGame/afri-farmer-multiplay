/**This file is part of the African Farmer Game - Multiplayer version.African Farmer Game - Multiplayer version is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.African Farmer Game - Multiplayer version is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.You should have received a copy of the GNU General Public License along with African Farmer Game - Multiplayer version.  If not, see <http://www.gnu.org/licenses/>.	**/package uk.ac.sussex.view.components {	import flash.display.MovieClip;		public class IconTextBox extends MovieClip {		private var textBox:GameTextField;		private var boxIcon:MovieClip;		private var iconFirst:Boolean = true;		public function IconTextBox() {			// constructor code			this.setUpTextBox();		}		public function setBoxIcon(newIcon:MovieClip):void {			if(this.boxIcon != null && this.boxIcon.parent != null){				this.boxIcon.parent.removeChild(boxIcon);			}			this.boxIcon = newIcon;			this.rejigItems();		}		public function setText(newText:String):void {			if(newText == null){				newText = "";			}			this.textBox.text = newText;		}		override public function set height(newHeight:Number):void {			this.textBox.height = newHeight;			this.rejigItems();		}		override public function set width(newWidth:Number):void {			if(newWidth > boxIcon.width){				this.textBox.width = newWidth - boxIcon.width;			} else {				throw new Error ("IconTextBox sez: that new width makes no sense. Too small. BoxIcon width is " + boxIcon.width);			}		}		private function setUpTextBox():void {			textBox = new GameTextField();			textBox.readonly = true;			//textBox.height = 20;		}		private function rejigItems():void {			//Assuming that the height is set well.  			var scaleRatio:Number = boxIcon.width/boxIcon.height;			boxIcon.height = textBox.height - 1;			boxIcon.width = boxIcon.height * scaleRatio;			//textBox.width = this.width - boxIcon.width;			if(iconFirst){				boxIcon.x = 0;				boxIcon.y = 1;				textBox.x = boxIcon.x + boxIcon.width - 2;				textBox.y = 0;			} else {				textBox.x = 0;				textBox.y = 0;				boxIcon.x = textBox.x - textBox.width - 2 ;				boxIcon.y = 1;			}			this.addChild(boxIcon);			this.addChild(textBox);		}	}	}