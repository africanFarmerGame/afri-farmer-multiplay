/**This file is part of the African Farmer Game - Multiplayer version.African Farmer Game - Multiplayer version is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.African Farmer Game - Multiplayer version is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.You should have received a copy of the GNU General Public License along with African Farmer Game - Multiplayer version.  If not, see <http://www.gnu.org/licenses/>.	**/package uk.ac.sussex.view.components {	/*	TickerMgr controls the moving information display at the bottom of the game window.	 */		import flash.display.*;	import flash.text.*;      import flash.utils.Timer;    import flash.events.TimerEvent;		public class TickerMgr extends Sprite {		private var tickerTxt:TextField;		private var stageWidth:int = 960;		private static var LABEL_WIDTH:uint = 76;		private static var COMPONENT_HEIGHT:uint = 35;		private static var BACKGROUND_COLOUR:uint = 0x060438;		private static var LABEL_BACKGROUND_COLOUR:uint = 0xA2BE28;		private var textTimer:Timer;				public function TickerMgr() {			//Set up the outline.			//this.graphics.lineStyle(1, BACKGROUND_COLOUR);			//this.graphics.moveTo(0, 0);			//this.graphics.lineTo(LABEL_WIDTH, 0);			//this.graphics.lineTo(LABEL_WIDTH, COMPONENT_HEIGHT);			//this.graphics.lineTo(0, COMPONENT_HEIGHT);			//this.graphics.lineTo(0, 0);			this.graphics.beginFill(LABEL_BACKGROUND_COLOUR);			this.graphics.drawRect(0, 0, LABEL_WIDTH, COMPONENT_HEIGHT);			this.graphics.endFill();						this.graphics.beginFill(BACKGROUND_COLOUR);			this.graphics.drawRect(LABEL_WIDTH, 0, stageWidth, COMPONENT_HEIGHT);			this.graphics.endFill();						this.setupTickerTxt();			this.setupLabel();			this.textTimer = new Timer(4);			textTimer.addEventListener(TimerEvent.TIMER, moveTxt);			this.setTickerTxt("...This space is for broadcast messages, sent to all players...  We might use this (for example) to alert people to a new delivery in the marketplace or to warn everyone of a blocked road stopping goods getting to market..."); 		}		public function setTickerTxt (newTxt:String):void {			trace("TickerMgr sez: Setting new text - " + newTxt);			//Make sure the new text comes in fresh.			this.setupTickerTxt();			tickerTxt.text = newTxt;			this.textTimer.start();		}		private function setupTickerTxt():void {			var txtFormat:TextFormat = new TextFormat();								txtFormat.font = "Calibri";			txtFormat.size = 24;			txtFormat.bold = false;			txtFormat.align = TextFormatAlign.LEFT;			txtFormat.leftMargin = 6;						tickerTxt = new TextField();						tickerTxt.defaultTextFormat = txtFormat;			tickerTxt.textColor = 0xFFFFFF;			tickerTxt.type = TextFieldType.INPUT;			tickerTxt.selectable = false;			tickerTxt.border = false;			tickerTxt.autoSize = TextFieldAutoSize.LEFT;					var tickerMask:MovieClip = new MovieClip();			tickerMask.graphics.beginFill(0x414042);			tickerMask.graphics.drawRect(0,0,stageWidth - LABEL_WIDTH, tickerTxt.height);			tickerMask.x = LABEL_WIDTH;			this.addChild(tickerMask);						tickerTxt.mask = tickerMask;			tickerTxt.x = stageWidth;			this.addChild(tickerTxt);		}		private function setupLabel():void{			var labelFormat:TextFormat = new TextFormat();			labelFormat.font = "Calibri";			labelFormat.size = 24;			labelFormat.bold = false;			labelFormat.align = TextFormatAlign.LEFT;			labelFormat.leftMargin = 6;						var labelTxt:TextField = new TextField();			labelTxt.backgroundColor = LABEL_BACKGROUND_COLOUR;			labelTxt.defaultTextFormat = labelFormat;			labelTxt.textColor = BACKGROUND_COLOUR;			labelTxt.selectable = false;			labelTxt.border = false;			labelTxt.width = LABEL_WIDTH;			labelTxt.height = COMPONENT_HEIGHT;			labelTxt.text = "News:";			this.addChild(labelTxt);		}		private function moveTxt(e:TimerEvent):void {			// note the speed tends to vary when game run in a browser, though seems more consistent			// when run in the standalone flash player.			if(tickerTxt.x-- + tickerTxt.width < 70){				tickerTxt.x = stageWidth;			}		}		public function clearTicker():void {			textTimer.stop();			if(tickerTxt!=null&&tickerTxt.parent!=null){				tickerTxt.parent.removeChild(tickerTxt);			}			tickerTxt = null;		}	}	}