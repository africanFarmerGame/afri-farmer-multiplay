/**This file is part of the African Farmer Game - Multiplayer version.African Farmer Game - Multiplayer version is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.African Farmer Game - Multiplayer version is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.You should have received a copy of the GNU General Public License along with African Farmer Game - Multiplayer version.  If not, see <http://www.gnu.org/licenses/>.	**/package uk.ac.sussex.view.components {	import flash.events.*;	import flash.display.MovieClip;		public class GameTextField extends MovieClip{		/*private static const DEFAULT_WIDTH:Number = 100;		private static const DEFAULT_HEIGHT:Number = 20;		private static const BORDER_COLOUR:uint = 0x000099;*/				public static const VALUE_CHANGED:String = "ValueChanged";				private var gTextField:GenericTextField;				public function GameTextField() {			// constructor code			gTextField = new GenericTextField();			gTextField.addEventListener(Event.CHANGE, lostFocus);			this.addChild(gTextField);		}		public function set displayAsPassword(password:Boolean):void {			gTextField.inputTextField.displayAsPassword = password;		}		public function set maxChars(maxChars:int):void {			gTextField.inputTextField.maxChars = maxChars;		}		public function set allowedChars(allowedChars:String):void {			gTextField.inputTextField.restrict = allowedChars;		}		public function get text():String {			return gTextField.inputTextField.text;		}		public function set text(inputText:String):void {			gTextField.inputTextField.text = inputText;		}		public function setTextColour(newColour:int):void {			gTextField.inputTextField.textColor = newColour;		}		public function set readonly(isReadonly:Boolean):void {			gTextField.inputTextField.selectable = !isReadonly;					}		override public function set enabled(enabled:Boolean):void {			gTextField.inputTextField.selectable = enabled;			gTextField.enabled = enabled;			if(enabled){				gTextField.alpha = 1;			} else {				gTextField.alpha = 0.7; 			}		}		override public function set width(newWidth:Number):void {			gTextField.width = newWidth;		}		private function lostFocus(e:Event):void {			dispatchEvent(new Event(VALUE_CHANGED));		}	}	}