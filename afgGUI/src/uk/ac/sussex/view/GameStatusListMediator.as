/**This file is part of the African Farmer Game - Multiplayer version.African Farmer Game - Multiplayer version is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.African Farmer Game - Multiplayer version is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.You should have received a copy of the GNU General Public License along with African Farmer Game - Multiplayer version.  If not, see <http://www.gnu.org/licenses/>.	**/package uk.ac.sussex.view {	import uk.ac.sussex.view.components.GameStatusDisplay;	import uk.ac.sussex.model.HearthsViewStatusProxy;	import org.puremvc.as3.multicore.interfaces.INotification;	import uk.ac.sussex.general.ApplicationFacade;	import org.puremvc.as3.multicore.patterns.mediator.Mediator;	import org.puremvc.as3.multicore.interfaces.IMediator;	/**	 * @author em97	 */	public class GameStatusListMediator extends Mediator implements IMediator {		private var statusListProxy:HearthsViewStatusProxy;		public static const NAME:String = "GameStatusListMediator";				public function GameStatusListMediator() {			super(NAME, null);		}		override public function listNotificationInterests():Array {			return [HearthsViewStatusProxy.STATUSES_ADDED];		}		override public function handleNotification (note:INotification):void {			switch (note.getName()){				case HearthsViewStatusProxy.STATUSES_ADDED:					var statuses:Array = statusListProxy.getHouseholdStatuses();					statusDisplay.displayStatuses(statuses);					break;			}		}		public function showList(showList:Boolean):void{			statusDisplay.clearSelection();			if(showList){				sendNotification(ViewAreaMediator.ADD_VIEW_COMPONENT, statusDisplay);			} else {				sendNotification(ApplicationFacade.REMOVE_FROM_SCREEN, statusDisplay);			}		}		protected function get statusDisplay():GameStatusDisplay {			return viewComponent as GameStatusDisplay;		}		override public function onRegister():void {			viewComponent = new GameStatusDisplay();			var submenu:SubMenuMediator = facade.retrieveMediator(SubMenuMediator.NAME) as SubMenuMediator;						statusDisplay.x = submenu.getSubmenuWidth();			statusDisplay.y = 10;			statusListProxy = facade.retrieveProxy(HearthsViewStatusProxy.NAME) as HearthsViewStatusProxy;			//sendNotification(ViewAreaMediator.ADD_VIEW_COMPONENT, statusDisplay);		}		override public function onRemove():void {			sendNotification(ApplicationFacade.REMOVE_FROM_SCREEN, statusDisplay);		}	}}