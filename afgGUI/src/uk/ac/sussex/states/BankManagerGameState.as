package uk.ac.sussex.states {	import uk.ac.sussex.model.SubMenuListProxy;	import uk.ac.sussex.controller.GMAssetCountUpdatedCommand;	import uk.ac.sussex.controller.GMBillCountUpdatedCommand;	import uk.ac.sussex.model.valueObjects.requestParams.DataParamNumber;	import uk.ac.sussex.model.valueObjects.requestParams.DataParamInt;	import uk.ac.sussex.view.BankGMOverviewListMediator;	import uk.ac.sussex.controller.GMBankOverviewReceivedCommand;	import uk.ac.sussex.model.valueObjects.requestParams.DataParamArrayFinancialStatus;	import uk.ac.sussex.model.HearthsFinancialStatusProxy;	import uk.ac.sussex.model.IncomingDataProxy;	import uk.ac.sussex.model.IncomingDataErrorProxy;	import uk.ac.sussex.model.RequestProxy;	import uk.ac.sussex.serverhandlers.BankHandlers;	import uk.ac.sussex.controller.SubMenuBankManagerCommand;	import uk.ac.sussex.view.SubMenuMediator;	import org.puremvc.as3.multicore.interfaces.IFacade;	/**	 * @author em97	 */	public class BankManagerGameState extends ManagerRoomState implements IGameState {		public static const NAME:String = "BankManagerGameState";		public static const LOCATION_NAME:String = "BANK";				public function BankManagerGameState(facade : IFacade) {			super(facade, NAME);		}		override public function displayState():void{			trace("BankManagerGameState sez: You've reached the Bank Manager Game State");			super.displayState();			//add proxies			this.addProxies();			//add commands			this.addCommands();			//add mediators			this.addMediators();		}		override public function cleanUpState():void{			//remove mediators			this.removeMediators();			//remove commands			this.removeCommands();			//remove proxies			this.removeProxies();			super.cleanUpState();		}		override public function refresh():void {			super.refresh();			var overviewRequest:RequestProxy = facade.retrieveProxy(BankHandlers.GM_FETCH_BANK_OVERVIEW + RequestProxy.NAME) as RequestProxy;			overviewRequest.sendRequest();		}		private function addProxies(): void {			var overviewRequest:RequestProxy = new RequestProxy(BankHandlers.GM_FETCH_BANK_OVERVIEW);			facade.registerProxy(overviewRequest);			overviewRequest.sendRequest();						facade.registerProxy(new IncomingDataErrorProxy(BankHandlers.BANK_ERROR));						facade.registerProxy(new IncomingDataErrorProxy(BankHandlers.GM_FETCH_BANK_ERROR));						var incomingOverview:IncomingDataProxy = new IncomingDataProxy(BankHandlers.GM_BANK_OVERVIEW_RECEIVED, BankHandlers.GM_BANK_OVERVIEW_RECEIVED);			incomingOverview.addDataParam(new DataParamArrayFinancialStatus(BankHandlers.GM_OVERVIEW_HEARTH_DETAILS));			facade.registerProxy(incomingOverview);						facade.registerProxy(new HearthsFinancialStatusProxy());						var assetsUpdated:IncomingDataProxy = new IncomingDataProxy(BankHandlers.GM_HOUSEHOLD_ASSETS_UPDATED, BankHandlers.GM_HOUSEHOLD_ASSETS_UPDATED);			assetsUpdated.addDataParam(new DataParamInt("HearthId"));			assetsUpdated.addDataParam(new DataParamNumber("HearthCash"));			assetsUpdated.addDataParam(new DataParamNumber("HearthAssets"));			facade.registerProxy(assetsUpdated);						var billsUpdated:IncomingDataProxy = new IncomingDataProxy(BankHandlers.GM_HOUSEHOLD_UNPAID_BILLS_UPDATED, BankHandlers.GM_HOUSEHOLD_UNPAID_BILLS_UPDATED);			billsUpdated.addDataParam(new DataParamInt("HearthId"));			billsUpdated.addDataParam(new DataParamNumber("HearthCash"));			billsUpdated.addDataParam(new DataParamInt("PendingFines"));			facade.registerProxy(billsUpdated);						var subMenuProxy:SubMenuListProxy = new SubMenuListProxy();			facade.registerProxy(subMenuProxy);			subMenuProxy.addSubMenuItem(BankHandlers.GM_SUB_MENU_OVERVIEW);			subMenuProxy.addSubMenuItem(BankHandlers.GM_SUB_MENU_FINES);			subMenuProxy.setDefaultMenuItem(BankHandlers.BANK_SUB_MENU_OVERVIEW);		}		private function removeProxies():void {			facade.removeProxy(BankHandlers.GM_FETCH_BANK_ERROR + IncomingDataProxy.NAME);			facade.removeProxy(BankHandlers.BANK_ERROR + IncomingDataProxy.NAME);			facade.removeProxy(BankHandlers.GM_FETCH_BANK_OVERVIEW + RequestProxy.NAME);			facade.removeProxy(BankHandlers.GM_BANK_OVERVIEW_RECEIVED + IncomingDataProxy.NAME);			facade.removeProxy(HearthsFinancialStatusProxy.NAME);			facade.removeProxy(BankHandlers.GM_HOUSEHOLD_UNPAID_BILLS_UPDATED + IncomingDataProxy.NAME);			facade.removeProxy(BankHandlers.GM_HOUSEHOLD_ASSETS_UPDATED + IncomingDataProxy.NAME);			facade.removeProxy(SubMenuListProxy.NAME);		}		private function addCommands():void {			facade.registerCommand(SubMenuMediator.SUB_MENU_ITEM_SELECTED, SubMenuBankManagerCommand);			facade.registerCommand(BankHandlers.GM_BANK_OVERVIEW_RECEIVED, GMBankOverviewReceivedCommand);			facade.registerCommand(BankHandlers.GM_HOUSEHOLD_UNPAID_BILLS_UPDATED, GMBillCountUpdatedCommand);			facade.registerCommand(BankHandlers.GM_HOUSEHOLD_ASSETS_UPDATED, GMAssetCountUpdatedCommand);		}		private function removeCommands():void {			facade.removeCommand(SubMenuMediator.SUB_MENU_ITEM_SELECTED);			facade.removeCommand(BankHandlers.GM_BANK_OVERVIEW_RECEIVED);			facade.removeCommand(BankHandlers.GM_HOUSEHOLD_UNPAID_BILLS_UPDATED);			facade.removeCommand(BankHandlers.GM_HOUSEHOLD_ASSETS_UPDATED);		}		private function addMediators():void {			var submenuMediator:SubMenuMediator = new SubMenuMediator();			facade.registerMediator(submenuMediator);						facade.registerMediator(new BankGMOverviewListMediator());						submenuMediator.moveToDefaultButton();		}		private function removeMediators():void {			facade.removeMediator(SubMenuMediator.NAME);			facade.removeMediator(BankGMOverviewListMediator.NAME);		}	}}