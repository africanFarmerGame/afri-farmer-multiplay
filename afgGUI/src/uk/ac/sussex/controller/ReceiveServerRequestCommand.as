package uk.ac.sussex.controller {	import org.puremvc.as3.multicore.interfaces.*;//	import org.puremvc.as3.multicore.patterns.observer.*;	import org.puremvc.as3.multicore.patterns.command.*;		import uk.ac.sussex.model.ServerProxy;	import uk.ac.sussex.model.IncomingDataProxy;	import uk.ac.sussex.model.valueObjects.requestParams.DataParam;		public class ReceiveServerRequestCommand extends SimpleCommand{		override public function execute( note:INotification):void {			var cmd:String = note.getBody() as String;			trace(cmd);			var incoming:IncomingDataProxy = facade.retrieveProxy(cmd+IncomingDataProxy.NAME) as IncomingDataProxy;			if(incoming != null){				var incomingParams:Array = incoming.getParams();				var serverProxy:ServerProxy = facade.retrieveProxy(ServerProxy.NAME) as ServerProxy;				for each (var param:DataParam in incomingParams) {					serverProxy.getReceivedParamValue(param);				}				incoming.handleIncomingData();			}		}	}	}