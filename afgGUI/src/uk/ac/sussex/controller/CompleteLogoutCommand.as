/**This file is part of the African Farmer Game - Multiplayer version.African Farmer Game - Multiplayer version is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.African Farmer Game - Multiplayer version is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.You should have received a copy of the GNU General Public License along with African Farmer Game - Multiplayer version.  If not, see <http://www.gnu.org/licenses/>.	**/package uk.ac.sussex.controller {	import uk.ac.sussex.model.valueObjects.HearthAsset;	import uk.ac.sussex.serverhandlers.HomeHandlers;	import uk.ac.sussex.view.ApplicationMediator;	import uk.ac.sussex.model.*;	import uk.ac.sussex.serverhandlers.CommsHandlers;	import uk.ac.sussex.view.SeasonsDisplayMediator;	import org.puremvc.as3.multicore.patterns.command.*;	import org.puremvc.as3.multicore.interfaces.*;		import uk.ac.sussex.states.LoginGameState;	import uk.ac.sussex.general.ApplicationFacade;		public class CompleteLogoutCommand extends SimpleCommand{		override public function execute(note:INotification):void {			facade.removeCommand(ApplicationFacade.LOGOUT_SUCCESSFUL);			facade.removeCommand(HomeHandlers.HEARTH_MEMBER_HEARTH_CHANGED);			facade.removeCommand(HomeHandlers.MEMBER_RESURRECTED);						facade.removeMediator(SeasonsDisplayMediator.NAME);						facade.removeProxy(SeasonsListProxy.NAME);			facade.removeProxy(ApplicationFacade.MY_CHAR);			facade.removeProxy(TickerProxy.NAME);			facade.removeProxy(CommsHandlers.DIR_ALL_PCS);			facade.removeProxy(CommsHandlers.DIR_TALK_LIST);			facade.removeProxy(TextMessageListProxy.NAME);			facade.removeProxy(GameAssetListProxy.NAME);			facade.removeProxy(HearthMembersListProxy.NAME);			facade.removeProxy(HearthAsset.OWNER_HEARTH + HearthAssetListProxy.NAME);			facade.removeProxy(HearthAsset.OWNER_PC + HearthAssetListProxy.NAME);			facade.removeProxy(HomeHandlers.MEMBER_RESURRECTED + IncomingDataProxy.NAME);			facade.removeProxy(HomeHandlers.HEARTH_MEMBER_HEARTH_CHANGED + IncomingDataProxy.NAME);						var appMediator:ApplicationMediator = facade.retrieveMediator(ApplicationMediator.NAME) as ApplicationMediator;			if(appMediator!=null){				appMediator.resetStates(); 			}						sendNotification(ApplicationFacade.CHANGE_STATE, LoginGameState.NAME);		}	}	}