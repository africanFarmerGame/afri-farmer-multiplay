package uk.ac.sussex.controller {	import org.puremvc.as3.multicore.interfaces.*;	import org.puremvc.as3.multicore.patterns.command.*;		import uk.ac.sussex.model.RequestProxy;	import uk.ac.sussex.model.valueObjects.FormField;	import uk.ac.sussex.model.valueObjects.Form;		public class SaveGameDetailsCommand extends SimpleCommand{		override public function execute ( note:INotification): void {			trace("SaveGameDetailsCommand sez: building up to submitting a create game request.");			var submittedForm:Form = note.getBody() as Form;			var submittedData:Array = submittedForm.getFormFields();			var gameRequestProxy:RequestProxy = facade.retrieveProxy("game.creategame" + RequestProxy.NAME) as RequestProxy; 			var maxFields:uint = submittedData.length;			for(var counter:uint = 0; counter < maxFields; counter++){				var field:FormField = submittedData[counter];				var fieldValue:String = field.getFieldValue();				if(fieldValue != null){					gameRequestProxy.setParamValue(field.getFieldName(), fieldValue);				} else {					if(field.getOptional()){						gameRequestProxy.setParamValue(field.getFieldName(), "");					} 					//Ought to catch the error if a mandatory value is missing. 				}			}						gameRequestProxy.sendRequest();		}	}	}