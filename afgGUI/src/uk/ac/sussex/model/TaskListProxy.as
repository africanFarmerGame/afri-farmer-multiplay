/**This file is part of the African Farmer Game - Multiplayer version.African Farmer Game - Multiplayer version is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.African Farmer Game - Multiplayer version is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.You should have received a copy of the GNU General Public License along with African Farmer Game - Multiplayer version.  If not, see <http://www.gnu.org/licenses/>.	**/package uk.ac.sussex.model {	import uk.ac.sussex.model.valueObjects.Task;	import uk.ac.sussex.model.valueObjects.TaskList;	import uk.ac.sussex.model.valueObjects.PotentialTask;	import org.puremvc.as3.multicore.patterns.proxy.Proxy;	import org.puremvc.as3.multicore.interfaces.IProxy;	/**	 * @author em97	 */	public class TaskListProxy extends Proxy implements IProxy {		public static const NAME:String = "TaskListProxy";		public static const HOUSEHOLD_TASKS_ADDED:String = "HouseholdTasksAdded";				public function TaskListProxy() {			super(NAME, new TaskList());		}		public function addHouseholdTasks(newTasks:Array):void { 			taskList.setHouseholdTasks(newTasks);			sendNotification(HOUSEHOLD_TASKS_ADDED);		}		public function addHouseholdTask(newTask:Task):void {			taskList.addHouseholdTask(newTask);			sendNotification(HOUSEHOLD_TASKS_ADDED);		}		public function addPotentialTask(newPT:PotentialTask):void {			taskList.addPotentialTask(newPT);		}		public function retrievePotentialTask(taskType:String):PotentialTask{			return taskList.retrievePotentialTask(taskType);		}		public function retrieveAllPotentialTasks():Array {			return taskList.getPotentialTasks();		}		public function retrieveHouseholdTask(taskId:int):Task {			return taskList.retrieveTask(taskId);		}		public function getHouseholdTasks():Array {			return taskList.getHouseholdTasks();		}		protected function get taskList():TaskList{			return data as TaskList;		}	}}